# assets/config/app_config.yaml

# --- LLM 서비스 기본 설정 ---
llm_service:
  primary_llm_model_name: "o3"
  secondary_llm_model_name: "o3-mini"
  # o3_llm_api_key 와 o3_llm_api_endpoint 는 .env 파일에서 관리합니다.

# --- 작업별 모델 및 파라미터 설정 ---
tasks:
  # 슬롯 추출 설정
  slot_extraction:
    model: "o3-mini" # 슬롯 추출에 사용할 모델
    temperature: 0.5
    max_completion_tokens: 500
    # 슬롯 추출 프롬프트 템플릿 파일 경로 (AppConfig에서 이 파일의 내용을 로드합니다)
    prompt_template_asset_path: "assets/prompts/slot_extraction_prompt.txt"

  # 대화 요약 설정
  summarization:
    enabled: true
    model: "o3-mini" # 요약에 사용할 모델
    temperature: 0.7
    max_completion_tokens: 1000
    target_summary_tokens: 300
    summarize_every_n_turns: 3
    include_slots_in_summary_prompt: true # 요약 프롬프트에 슬롯 포함 여부 (현재 코드에서는 이 값을 직접 사용하진 않음)
    include_tool_results_in_summary: "brief" # 요약 시 도구 결과 포함 방식 (현재 코드에서는 이 값을 직접 사용하진 않음)
    # 요약 프롬프트 템플릿 파일 경로 (AppConfig에서 이 파일의 내용을 로드합니다)
    prompt_template_asset_path: "assets/prompts/summarization_prompt.txt"

  # 채팅 오케스트레이션 관련 파라미터
  chat_orchestration:
    tool_decision_temperature: 1.0
    tool_decision_max_completion_tokens: 2000
    final_response_temperature: 1.0
    final_response_max_completion_tokens: 2000
    max_tool_iterations: 5

# --- 컨텍스트 관리 ---
context_management:
  recent_k_turns: 3

# --- LLM에게 제공될 Tool(함수) 정의 ---
# 각 Tool의 name, description, parameters (JSON Schema 형태)를 정의합니다.
tool_definitions:
  - type: "function"
    function:
      name: "getUserCoupons"
      description: "로그인한 사용자가 현재 보유하고 있거나 발급 가능한 쿠폰 목록과 상세 정보를 반환합니다. 쿠폰 관련 문의 또는 결제 시 사용됩니다."
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "쿠폰 정보를 조회할 사용자의 ID (현재 로그인한 사용자 ID)"
        required: ["userId"]

  - type: "function"
    function:
      name: "getProductInfo"
      description: "제품명(필수)과 브랜드명(선택)으로 제품의 상세 정보(설명, 가격, 사용 가능한 사이즈/색상, 이미지 URL 키 등) 또는 '제품 없음' 정보를 반환합니다. 제품 문의나 비교 시 사용되며, 반환된 imageUrl 키를 통해 앱에서 이미지를 표시할 수 있습니다." # MODIFIED
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "정보를 조회할 제품의 정확한 한글 전체 제품명"
          brandName:
            type: "string"
            description: "조회할 제품의 브랜드명 (선택 사항)"
          displayImage: # ADDED
            type: "boolean"
            description: "제품 정보를 응답할 때 앱에서 관련 이미지를 함께 표시하도록 하려면 true로 설정합니다. 기본값은 false입니다."
        required: ["productName"]

  - type: "function"
    function:
      name: "getStoreStock"
      description: "제품명과 매장명을 필수로 입력받고, 선택적으로 사이즈나 색상을 지정하여 특정 매장의 제품 재고 상황을 반환합니다. 사이즈/색상 미지정 시 해당 제품의 모든 가용 옵션별 재고 리스트를 반환합니다. 구매 가능 여부 확인 시 사용됩니다."
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "재고를 조회할 제품의 정확한 한글 전체 제품명"
          storeName:
            type: "string"
            description: "재고를 조회할 데카트론 매장명 (예: '데카트론 강남점')"
          size:
            type: "string"
            description: "조회할 제품의 사이즈 (선택 사항, 예: '270mm', 'M', '95')"
          color:
            type: "string"
            description: "조회할 제품의 색상 (선택 사항, 예: '블랙', '네이비')"
        required: ["productName", "storeName"]

  - type: "function"
    function:
      name: "getProductLocationInStore"
      description: "제품명 또는 카테고리(둘 중 하나 필수)와 매장명을 입력받아, 매장 내 제품의 위치 정보(구역, 통로 등) 또는 '정보 없음'을 반환합니다. 매장 내에서 제품을 찾을 때 사용됩니다."
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "위치를 찾을 제품의 정확한 한글 전체 제품명 (카테고리와 둘 중 하나 필수)"
          category:
            type: "string"
            description: "위치를 찾을 제품의 카테고리 (예: '캠핑텐트', '러닝화') (제품명과 둘 중 하나 필수)"
          storeName:
            type: "string"
            description: "제품 위치를 조회할 데카트론 매장명"
        required: ["storeName"] # productName 또는 category 중 하나는 LLM이 상황에 맞게 판단하여 전송

  - type: "function"
    function:
      name: "getStoreInfo"
      description: "특정 매장명(필수)으로 해당 데카트론 매장의 일반 정보(주소, 운영 시간, 전화번호, 제공 서비스 등) 또는 '매장 정보 없음'을 반환합니다. 매장 정보 문의 시 사용됩니다."
      parameters:
        type: "object"
        properties:
          storeName:
            type: "string"
            description: "정보를 조회할 데카트론 매장명"
        required: ["storeName"]

  - type: "function"
    function:
      name: "getUserPurchaseHistory"
      description: "로그인한 사용자의 과거 구매 내역을 반환합니다. 재구매 제안이나 과거 구매 제품 관련 문의 시 참고 정보로 활용됩니다."
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "구매 내역을 조회할 사용자의 ID (현재 로그인한 사용자 ID)"
        required: ["userId"]

  - type: "function"
    function:
      name: "getProductReviews"
      description: "특정 제품의 사용자 리뷰 요약 및 일부 주요 리뷰 목록, 또는 '리뷰 없음' 정보를 반환합니다. 제품 선택 시 참고 정보로 제공됩니다."
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "리뷰를 조회할 제품의 정확한 한글 전체 제품명"
        required: ["productName"]

  - type: "function"
    function:
      name: "generateOrderQRCode"
      description: "사용자 최종 확인 후 호출됩니다. 주문 정보(제품, 수량, 사이즈, 색상, 구매 매장, 사용 쿠폰 ID(선택))를 받아 계산대 제시용 QR 코드 데이터를 생성합니다. 실제 결제는 계산대에서 QR 스캔 후 진행됩니다."
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "주문하는 사용자의 ID (현재 로그인한 사용자 ID)"
          productName:
            type: "string"
            description: "주문할 제품의 정확한 한글 전체 제품명. 여러 제품일 경우 '가족나들이세트' 와 같이 대표명 사용 가능."
          quantity:
            type: "integer"
            description: "주문할 제품의 수량"
          size:
            type: "string"
            description: "주문할 제품의 사이즈 (예: '270mm', 'M', '4인용')"
          color:
            type: "string"
            description: "주문할 제품의 색상 (예: '블랙', '카키', '혼합')"
          storeName:
            type: "string"
            description: "구매를 진행할 데카트론 매장명"
          couponId:
            type: "string"
            description: "적용할 쿠폰의 ID (선택 사항)"
        required: ["userId", "productName", "quantity", "size", "color", "storeName"]

  - type: "function"
    function:
      name: "getConversationHistory"
      description: "현재 사용자의 이전 대화 맥락이 필요할 때 호출합니다. 시스템에 사전 설정된 요약 주기 및 최근 K턴 설정을 기준으로, 해당 채팅방의 가장 최근 요약본과 그 요약 이후부터 가장 최근 K턴까지의 대화 기록 청크를 반환합니다. 사용자가 '저번에 말했던 거', '아까 그거' 등 이전 대화 내용을 언급하거나, 챗봇이 맥락 이해를 위해 필요하다고 판단할 경우 사용합니다."
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "대화 기록을 조회할 사용자의 ID (현재 로그인한 사용자 ID)"
          currentTurnCount:
            type: "integer"
            description: "현재 대화의 총 턴 수. 시스템 프롬프트와 사용자 입력이 각각 1턴으로 간주될 수 있으나, 여기서는 사용자-챗봇 상호작용 1회를 1턴으로 가정하고 증가된 값을 전달."
          summaryInterval:
            type: "integer"
            description: "대화 요약이 생성되는 주기 (예: 5턴마다). 이 값은 시스템 설정값일 수 있으며, LLM이 임의로 지정하지 않습니다."
          recentKTurns:
            type: "integer"
            description: "요약 이후 가져올 최근 대화의 턴 수. 이 값은 시스템 설정값일 수 있으며, LLM이 임의로 지정하지 않습니다."
        required: ["userId", "currentTurnCount", "summaryInterval", "recentKTurns"]

  - type: "function"
    function:
      name: "findNearbyStores"
      description: "현재 지역명(예: '강남구', '해운대구')과 최대 결과 수(선택 사항, 기본 3개)를 입력받아, 근처 데카트론 매장 목록(이름, 주소, 대략적 거리) 또는 '주변 매장 없음' 정보를 반환합니다. 특정 매장에 재고가 없을 때 연계하여 사용될 수 있습니다."
      parameters:
        type: "object"
        properties:
          currentLocation:
            type: "string"
            description: "주변 매장을 검색할 기준 지역명 (예: '강남구', '인천 연수구')"
          maxResults:
            type: "integer"
            description: "반환받을 최대 매장 수 (선택 사항, 기본값은 3)"
        required: ["currentLocation"]

  - type: "function"
    function:
      name: "recommendProductsByFeatures"
      description: "사용자가 원하는 제품의 여러 특징들(예: '가벼움', '방수', '발목보호'), 선택적 카테고리, 최대 결과 수(선택 사항, 기본 3개)를 입력받아, 해당 특징에 부합하는 추천 제품 목록(제품명, 간단 설명, 가격, 이미지 URL 키 등) 또는 '추천 제품 없음' 정보를 반환합니다. 반환된 imageUrl 키를 통해 앱에서 이미지를 표시할 수 있습니다." # MODIFIED
      parameters:
        type: "object"
        properties:
          features:
            type: "array"
            items:
              type: "string"
            description: "사용자가 원하는 제품의 특징 목록 (예: ['방수', '경량', '편안함'])"
          category:
            type: "string"
            description: "추천받고 싶은 제품의 카테고리 (예: '러닝화', '캠핑텐트', '축구공') (선택 사항)"
          maxResults:
            type: "integer"
            description: "추천받을 최대 제품 수 (선택 사항, 기본값은 3)"
          displayImage: # ADDED
            type: "boolean"
            description: "추천 제품 정보를 응답할 때 앱에서 관련 이미지를 함께 표시하도록 하려면 true로 설정합니다. 기본값은 false입니다."
        required: ["features"]

# 참고: 위 YAML 구조는 LLM 모델의 Function Calling/Tool 사용 명세와 최대한 유사하게 구성되었습니다.
# AppConfig.dart 에서 이 구조를 파싱하여 ToolDefinition 객체 리스트로 변환합니다.