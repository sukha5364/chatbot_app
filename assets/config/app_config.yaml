# assets/config/app_config.yaml

# --- LLM 서비스 기본 설정 ---
llm_service:
  primary_llm_model_name: "o3"
  secondary_llm_model_name: "o3-mini"
  # o3_llm_api_key 와 o3_llm_api_endpoint 는 .env 파일에서 관리합니다.

# --- 작업별 모델 및 파라미터 설정 ---
tasks:
  # 슬롯 추출 설정
  slot_extraction:
    model: "o3-mini"
    temperature: 0.5
    max_completion_tokens: 500
    prompt_template_asset_path: "assets/prompts/slot_extraction_prompt.txt"

  # 대화 요약 설정
  summarization:
    enabled: true
    model: "o3-mini"
    temperature: 0.7
    max_completion_tokens: 1000
    target_summary_tokens: 300
    summarize_every_n_turns: 3
    include_slots_in_summary_prompt: true
    include_tool_results_in_summary: "brief"
    prompt_template_asset_path: "assets/prompts/summarization_prompt.txt"

  # 채팅 오케스트레이션 관련 파라미터
  chat_orchestration:
    tool_decision_temperature: 1.0
    tool_decision_max_completion_tokens: 2000
    final_response_temperature: 1.0
    final_response_max_completion_tokens: 2000
    max_tool_iterations: 5

# --- 컨텍스트 관리 ---
context_management:
  recent_k_turns: 3

# --- LLM에게 제공될 Tool(함수) 정의 ---
tool_definitions:
  - type: "function"
    function:
      name: "getUserCoupons"
      description: "로그인한 사용자가 현재 보유하고 있거나 발급 가능한 쿠폰 목록과 상세 정보를 반환합니다. (사용자 질문 예시: '오늘 쓸 쿠폰 있어?', '신규 회원 쿠폰 있나요?', '5만원 이상 구매했는데 쓸만한 쿠폰 찾아봐줘')"
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "쿠폰 정보를 조회할 사용자의 ID (현재 로그인한 사용자 ID)"
        required: ["userId"]

  - type: "function"
    function:
      name: "getProductInfo"
      description: "정확한 전체 제품명을 알고 있을 때만 사용하여 제품의 상세 정보를 조회합니다. (제품명 예시: 'KALENJI RUN SUPPORT', 'QUECHUA AIR SECONDS 4.2 FRESH&BLACK'). 만약 제품명이 확실하지 않다면 이 함수 대신 recommendProductsByFeatures를 사용하세요. 사용자에게 제품 이미지를 함께 보여주고 싶을 경우 `displayImage` 파라미터를 true로 설정하세요. (사용자 질문 예시: '칼렌지 런 서포트 모델 자세히 알려줘', '이 DOMYOS 레깅스 정보 좀 줘')"
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "정보를 조회할 제품의 정확한 한글 전체 제품명"
          brandName:
            type: "string"
            description: "조회할 제품의 브랜드명 (선택 사항)"
          displayImage:
            type: "boolean"
            description: "제품 정보를 응답할 때 앱에서 관련 이미지를 함께 표시하도록 하려면 true로 설정합니다. 기본값은 false입니다."
        required: ["productName"]

  - type: "function"
    function:
      name: "getStoreStock"
      description: "정확한 제품명과 매장명을 알고 있을 때 특정 매장의 제품 재고 상황을 반환합니다. 제품명과 사이즈를 명확히 분리해야 합니다. (사용자 질문 예시: 'KIPSTA F900 프로 축구공 5호, 송도점에 재고 있나요?', '하남점에 카키색 텐트 재고 확인해줘', '강남점에 런닝화 270mm 재고 확인해줄래?'). (호출 예시1: getStoreStock(productName: 'KIPSTA F900 프로 축구공', storeName: '데카트론 송도점', size: '5호')). (호출 예시2: getStoreStock(productName: 'QUECHUA 컴팩트 폴딩 캠핑 의자', storeName: '데카트론 월드컵점'))"
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "재고를 조회할 제품의 정확한 한글 전체 제품명. 사이즈 정보는 제외해야 합니다."
          storeName:
            type: "string"
            description: "재고를 조회할 데카트론 매장명 (예: '데카트론 강남점', '데카트론 월드컵점')"
          size:
            type: "string"
            description: "조회할 제품의 사이즈 (선택 사항, 예: '270mm', 'M', '5호', '4인용')"
          color:
            type: "string"
            description: "조회할 제품의 색상 (선택 사항, 예: '블랙', '네이비', '카키')"
        required: ["productName", "storeName"]

  - type: "function"
    function:
      name: "getProductLocationInStore"
      description: "매장 내 제품의 위치 정보(구역, 통로 등)를 반환합니다. (사용자 질문 예시: '하남점에서 카키색 텐트 어디에 있어요?', '캠핑용품 코너는 어디로 가야해요?'). (호출 예시: getProductLocationInStore(productName: 'QUECHUA AIR SECONDS 4.2 FRESH&BLACK', storeName: '데카트론 하남점'))"
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "위치를 찾을 제품의 정확한 한글 전체 제품명 (카테고리와 둘 중 하나 필수)"
          category:
            type: "string"
            description: "위치를 찾을 제품의 카테고리 (예: '캠핑텐트', '러닝화') (제품명과 둘 중 하나 필수)"
          storeName:
            type: "string"
            description: "제품 위치를 조회할 데카트론 매장명"
        required: ["storeName"]

  - type: "function"
    function:
      name: "getStoreInfo"
      description: "특정 데카트론 매장의 일반 정보(주소, 운영 시간, 전화번호 등)를 반환합니다. (사용자 질문 예시: '청라점 주소랑 영업시간 알려줘', '데카트론 월드컵점은 몇 시까지 해요?'). (매장 이름 예시: '데카트론 강남점', '데카트론 송도점', '데카트론 청라점')"
      parameters:
        type: "object"
        properties:
          storeName:
            type: "string"
            description: "정보를 조회할 데카트론 매장명"
        required: ["storeName"]

  - type: "function"
    function:
      name: "getUserPurchaseHistory"
      description: "로그인한 사용자의 과거 구매 내역을 반환합니다. (사용자 질문 예시: '내가 작년에 샀던 거 알려줘', '예전에 산 레깅스랑 사이즈 비교 가능할까요?', '3월에 구매한 내역 좀 보여줘')"
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "구매 내역을 조회할 사용자의 ID (현재 로그인한 사용자 ID)"
        required: ["userId"]

  - type: "function"
    function:
      name: "getProductReviews"
      description: "특정 제품의 사용자 리뷰 요약 및 일부 주요 리뷰 목록을 반환합니다. (사용자 질문 예시: '그 신발 리뷰 어때?', 'KALENJI RUN SUPPORT 리뷰 궁금해요', '이 레깅스 사용자 후기 좀 요약해줘')"
      parameters:
        type: "object"
        properties:
          productName:
            type: "string"
            description: "리뷰를 조회할 제품의 정확한 한글 전체 제품명"
        required: ["productName"]

  - type: "function"
    function:
      name: "generateOrderQRCode"
      description: "사용자 최종 확인 후, 주문 정보를 받아 계산대 제시용 QR 코드 데이터를 생성합니다. 여러 상품을 함께 주문할 경우, productName에 '가족나들이세트'와 같이 대표 명칭을 사용하세요. (주의: 모든 필수 파라미터(userId, productName, quantity, size, color, storeName)가 채워져야 호출 가능합니다.) (사용자 최종 확인 질문 예시: '네, 맞아요!', '그대로 주문해주세요', '네, 좋아요!')"
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "주문하는 사용자의 ID"
          productName:
            type: "string"
            description: "주문할 제품명. 여러 제품일 경우 '가족나들이세트'와 같이 요약된 대표명을 사용합니다."
          quantity:
            type: "integer"
            description: "주문할 제품의 총 수량"
          size:
            type: "string"
            description: "대표 제품의 사이즈 또는 '혼합'"
          color:
            type: "string"
            description: "대표 제품의 색상 또는 '혼합'"
          storeName:
            type: "string"
            description: "구매를 진행할 데카트론 매장명"
          couponId:
            type: "string"
            description: "적용할 쿠폰의 ID (선택 사항)"
        required: ["userId", "productName", "quantity", "size", "color", "storeName"]

  - type: "function"
    function:
      name: "getConversationHistory"
      description: "[매우 중요] 사용자가 '저번에', '아까', '이전에 말했던 것' 등 명시적으로 과거의 대화를 참조하는 질문을 할 경우, 다른 어떤 함수보다 이 함수를 가장 먼저 호출하여 대화의 전체 맥락을 파악해야 합니다. (사용자 질문 예시: '저번에 추천해준 텐트 뭐였죠?', '아까 알려준 첫번째 러닝화 이름이 뭐였지?')"
      parameters:
        type: "object"
        properties:
          userId:
            type: "string"
            description: "대화 기록을 조회할 사용자의 ID"
          currentTurnCount:
            type: "integer"
            description: "현재 대화의 총 턴 수"
          summaryInterval:
            type: "integer"
            description: "대화 요약 주기. 시스템 설정값."
          recentKTurns:
            type: "integer"
            description: "가져올 최근 대화의 턴 수. 시스템 설정값."
        required: ["userId", "currentTurnCount", "summaryInterval", "recentKTurns"]

  - type: "function"
    function:
      name: "findNearbyStores"
      description: "현재 위치 또는 특정 지역 기준으로 근처 데카트론 매장 목록을 찾습니다. (사용자 질문 예시: '여기 근처에 데카트론 매장 있어?', '강남구 가까운 매장 찾아줘', '송도점 품절이면 근처 다른 매장 알려줘'). (지역명 예시: '강남구', '해운대구', '인천 연수구')"
      parameters:
        type: "object"
        properties:
          currentLocation:
            type: "string"
            description: "주변 매장을 검색할 기준 지역명"
          maxResults:
            type: "integer"
            description: "반환받을 최대 매장 수 (선택 사항, 기본값은 3)"
        required: ["currentLocation"]

  - type: "function"
    function:
      name: "recommendProductsByFeatures"
      description: "사용자가 원하는 제품의 특징들을 기반으로 제품을 추천합니다. 제품명이 확실하지 않을 때 이 함수를 사용하세요. (사용자 질문 예시: '달리기 초보인데 발목 잘 잡아주고 쿠션 좋은 가성비 러닝화 추천해줘', '아이들이 놀기 좋은 부드러운 축구공 추천해주세요', '방수 잘 되고 설치 쉬운 4인용 텐트 보여줘'). 이미지를 함께 표시하려면 displayImage를 true로 설정하세요."
      parameters:
        type: "object"
        properties:
          features:
            type: "array"
            items:
              type: "string"
            description: "사용자가 원하는 제품의 특징 목록 (예: ['방수', '경량', '편안함', '가성비', '발목 지지'])"
          category:
            type: "string"
            description: "추천받고 싶은 제품의 카테고리 (예: '러닝화', '캠핑 의자', '축구공', '텐트') (선택 사항)"
          maxResults:
            type: "integer"
            description: "추천받을 최대 제품 수 (선택 사항, 기본값은 3)"
          displayImage:
            type: "boolean"
            description: "추천 제품 정보를 응답할 때 앱에서 관련 이미지를 함께 표시하도록 하려면 true로 설정합니다."
        required: ["features"]